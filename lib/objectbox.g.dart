// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again
// with `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import 'models/trip.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
      id: const obx_int.IdUid(5, 1832358271218994760),
      name: 'Trip',
      lastPropertyId: const obx_int.IdUid(17, 54122279934429300),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 4737431852131480680),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 795573068566224104),
            name: 'startMileage',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 2196072175871417321),
            name: 'endMileage',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 5943347980171961364),
            name: 'endTimestamp',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(12, 3868884046055870958),
            name: 'tripCategory',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(13, 6020576199144619562),
            name: 'tripStatus',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(15, 5333954269423663963),
            name: 'startLocationJson',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(16, 5922150338539166868),
            name: 'endLocationJson',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(17, 54122279934429300),
            name: 'vehicleJson',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[])
];

/// Shortcut for [obx.Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [obx.Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
Future<obx.Store> openStore(
    {String? directory,
    int? maxDBSizeInKB,
    int? maxDataSizeInKB,
    int? fileMode,
    int? maxReaders,
    bool queriesCaseSensitiveDefault = true,
    String? macosApplicationGroup}) async {
  await loadObjectBoxLibraryAndroidCompat();
  return obx.Store(getObjectBoxModel(),
      directory: directory ?? (await defaultStoreDirectory()).path,
      maxDBSizeInKB: maxDBSizeInKB,
      maxDataSizeInKB: maxDataSizeInKB,
      fileMode: fileMode,
      maxReaders: maxReaders,
      queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
      macosApplicationGroup: macosApplicationGroup);
}

/// Returns the ObjectBox model definition for this project for use with
/// [obx.Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
      entities: _entities,
      lastEntityId: const obx_int.IdUid(8, 7146167246693813417),
      lastIndexId: const obx_int.IdUid(7, 9100210303411249520),
      lastRelationId: const obx_int.IdUid(1, 7730691983047863070),
      lastSequenceId: const obx_int.IdUid(0, 0),
      retiredEntityUids: const [
        3917395289137033145,
        522391902727584447,
        800457783229245686,
        2191456460352204353,
        4749663025170053776,
        7146167246693813417,
        6912504348649240809
      ],
      retiredIndexUids: const [
        1618193787246806027,
        1724532676930884542,
        9100210303411249520
      ],
      retiredPropertyUids: const [
        5169966380460749462,
        1063782334860157701,
        5538011044127542787,
        2608101225926435352,
        2136026444521046762,
        417434690863460070,
        8682506618904700378,
        2030316889418012582,
        1017530267524238925,
        8738200652028959083,
        2488691493552574405,
        1637808822089107047,
        2927733738437424194,
        1125954922849964380,
        5605056955698089737,
        8297823567899394019,
        1104393838953814765,
        7702087421946930035,
        8462103263919081522,
        2900811730491421924,
        2819295180917484206,
        8087349748054237338,
        5385960739147473959,
        6026804955087671822,
        1559457446283192550,
        4400260653195643072,
        4760103922227303277,
        1659708753855515667,
        5375092990666349265,
        9032816223888766268,
        7835324415654395656,
        3832763960385620046,
        1948612003747309004,
        150701777894560759
      ],
      retiredRelationUids: const [7730691983047863070],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, obx_int.EntityDefinition>{
    Trip: obx_int.EntityDefinition<Trip>(
        model: _entities[0],
        toOneRelations: (Trip object) => [],
        toManyRelations: (Trip object) => {},
        getId: (Trip object) => object.id,
        setId: (Trip object, int id) {
          object.id = id;
        },
        objectToFB: (Trip object, fb.Builder fbb) {
          final endTimestampOffset = object.endTimestamp == null
              ? null
              : fbb.writeString(object.endTimestamp!);
          final tripCategoryOffset = fbb.writeString(object.tripCategory);
          final tripStatusOffset = fbb.writeString(object.tripStatus);
          final startLocationJsonOffset =
              fbb.writeString(object.startLocationJson);
          final endLocationJsonOffset = object.endLocationJson == null
              ? null
              : fbb.writeString(object.endLocationJson!);
          final vehicleJsonOffset = fbb.writeString(object.vehicleJson);
          fbb.startTable(18);
          fbb.addInt64(0, object.id);
          fbb.addInt64(3, object.startMileage);
          fbb.addInt64(4, object.endMileage);
          fbb.addOffset(6, endTimestampOffset);
          fbb.addOffset(11, tripCategoryOffset);
          fbb.addOffset(12, tripStatusOffset);
          fbb.addOffset(14, startLocationJsonOffset);
          fbb.addOffset(15, endLocationJsonOffset);
          fbb.addOffset(16, vehicleJsonOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final startMileageParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 10, 0);
          final vehicleJsonParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 36, '');
          final tripCategoryParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 26, '');
          final tripStatusParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 28, '');
          final startLocationJsonParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 32, '');
          final endLocationJsonParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 34);
          final endMileageParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 12);
          final endTimestampParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 16);
          final object = Trip(
              startMileage: startMileageParam,
              vehicleJson: vehicleJsonParam,
              tripCategory: tripCategoryParam,
              tripStatus: tripStatusParam,
              startLocationJson: startLocationJsonParam,
              endLocationJson: endLocationJsonParam,
              endMileage: endMileageParam,
              endTimestamp: endTimestampParam)
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);

          return object;
        })
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [Trip] entity fields to define ObjectBox queries.
class Trip_ {
  /// See [Trip.id].
  static final id = obx.QueryIntegerProperty<Trip>(_entities[0].properties[0]);

  /// See [Trip.startMileage].
  static final startMileage =
      obx.QueryIntegerProperty<Trip>(_entities[0].properties[1]);

  /// See [Trip.endMileage].
  static final endMileage =
      obx.QueryIntegerProperty<Trip>(_entities[0].properties[2]);

  /// See [Trip.endTimestamp].
  static final endTimestamp =
      obx.QueryStringProperty<Trip>(_entities[0].properties[3]);

  /// See [Trip.tripCategory].
  static final tripCategory =
      obx.QueryStringProperty<Trip>(_entities[0].properties[4]);

  /// See [Trip.tripStatus].
  static final tripStatus =
      obx.QueryStringProperty<Trip>(_entities[0].properties[5]);

  /// See [Trip.startLocationJson].
  static final startLocationJson =
      obx.QueryStringProperty<Trip>(_entities[0].properties[6]);

  /// See [Trip.endLocationJson].
  static final endLocationJson =
      obx.QueryStringProperty<Trip>(_entities[0].properties[7]);

  /// See [Trip.vehicleJson].
  static final vehicleJson =
      obx.QueryStringProperty<Trip>(_entities[0].properties[8]);
}
